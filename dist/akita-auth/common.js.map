{"version":3,"sources":["webpack:///./src/app/cart/state/cart.model.ts","webpack:///./src/app/cart/state/cart.service.ts","webpack:///./src/app/shared/shared.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAQO,SAAS,cAAc,CAAC,MAAyB;IACtD,OAAO,iDACL,KAAK,EAAE,CAAC,EACR,QAAQ,EAAE,CAAC,IACR,MAAM,CACE,CAAC;AAChB,CAAC;;;;;;;;;;;;;;;;;;;;;ACd0C;AACF;AACA;AACK;AAO9C;IACE,qBAAoB,SAAoB,EAAU,SAAoB;QAAlD,cAAS,GAAT,SAAS,CAAW;QAAU,cAAS,GAAT,SAAS,CAAW;IAAG,CAAC;IAE1E,yBAAG,GAAH,UAAI,SAAwB;QAC1B,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACrD,IAAI,CAAC,CAAC,QAAQ,EAAE;YACd,OAAO,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;SACjD;QAED,IAAM,IAAI,GAAG,kEAAc,CAAC;YAC1B,SAAS;SACV,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,8BAAQ,GAAR,UAAS,SAAwB;QAC/B,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACrD,IAAI,CAAC,CAAC,QAAQ,EAAE;YACd,IAAI,QAAQ,CAAC,QAAQ,KAAK,CAAC,EAAE;gBAC3B,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;aACzC;YAED,OAAO,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;SAC9D;IACH,CAAC;IAED,4BAAM,GAAN,UAAO,SAAa;QAClB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACnC,CAAC;IA7BU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAE+B,qDAAS,EAAqB,qDAAS;OAD3D,WAAW,CA8BvB;IAAD,kBAAC;CAAA;AA9BuB;;;;;;;;;;;;;;;;;;;;ACViB;AACM;AACM;AAOrD;IAAA;IAA2B,CAAC;IAAf,YAAY;QALxB,8DAAQ,CAAC;YACR,YAAY,EAAE,EAAE;YAChB,OAAO,EAAE,CAAC,4DAAY,EAAE,kEAAmB,CAAC;YAC5C,OAAO,EAAE,CAAC,4DAAY,EAAE,kEAAmB,CAAC;SAC7C,CAAC;OACW,YAAY,CAAG;IAAD,mBAAC;CAAA;AAAH","file":"common.js","sourcesContent":["import { Product } from '../../products/state/products.model';\n\nexport type CartItem = {\n  productId: Product['id'];\n  quantity: number;\n  total: number;\n};\n\nexport function createCartItem(params: Partial<CartItem>) {\n  return {\n    total: 0,\n    quantity: 1,\n    ...params\n  } as CartItem;\n}\n","import { Injectable } from '@angular/core';\nimport { CartStore } from './cart.store';\nimport { CartQuery } from './cart.query';\nimport { createCartItem } from './cart.model';\nimport { ID } from '@datorama/akita';\nimport { Product } from '../../products/state/products.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  constructor(private cartStore: CartStore, private cartQuery: CartQuery) {}\n\n  add(productId: Product['id']) {\n    const findItem = this.cartQuery.getEntity(productId);\n    if (!!findItem) {\n      return this.cartStore.updateQuantity(productId);\n    }\n\n    const item = createCartItem({\n      productId\n    });\n\n    return this.cartStore.add(item);\n  }\n\n  subtract(productId: Product['id']) {\n    const findItem = this.cartQuery.getEntity(productId);\n    if (!!findItem) {\n      if (findItem.quantity === 1) {\n        return this.cartStore.remove(productId);\n      }\n\n      return this.cartStore.updateQuantity(findItem.productId, -1);\n    }\n  }\n\n  remove(productId: ID) {\n    this.cartStore.remove(productId);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, ReactiveFormsModule],\n  exports: [CommonModule, ReactiveFormsModule]\n})\nexport class SharedModule {}\n"],"sourceRoot":""}